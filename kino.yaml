openapi: 3.0.0
info:
  title: Kino Booking App
  description: >
    <div> 
        This YAML file describe the API functionality of the MAD1 project
      <p>Application name: <b>Kino Booking App</b></p>
      <h3>General Info:</h3>
      <ol> 
        <li> The YAML covers CRUD operations of User, Venue and Show Models. </li>
        <li> Flask RESTful API are used to  implement APIs.</li>
      </ol>
    </div>

    <h3> User Table Schema </h3> 
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>id</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
      <tr>
        <td>name</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>username</td>
        <td>String</td>
        <td>Unique, Not Null</td>
      </tr>      
      <tr>
        <td>password</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>role</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>created_timestamp</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>updated_timestamp</td>
        <td>String</td>
        <td>Not Null</td>
      </tr> 
    </tbody>
    </table>

    <h3> Venue Table Schema </h3> 
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>id</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
      <tr>
        <td>name</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>place</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>venue_img</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>created_timestamp</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>updated_timestamp</td>
        <td>String</td>
        <td>Not Null</td>
      </tr> 
    </tbody>
    </table>


    <h3> Show Table Schema </h3> 
    <table>
      <thead>
        <th>Column Name</th>
        <th>Column Type</th>
        <th>Constraints</th>
      </thead>
      <tbody>
      <tr>
        <td>id</td>
        <td>Integer</td>
        <td>Primary Key, Auto Increment</td>
      </tr>
      <tr>
        <td>title</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>language</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>duration</td>
        <td>Integer</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>price</td>
        <td>Integer</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>rating</td>
        <td>Float</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>show_time</td>
        <td>DateTime</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>n_rows</td>
        <td>Integer</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>n_seats</td>
        <td>Integer</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>show_img</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>venue_id</td>
        <td>Integer</td>
        <td>Foreign Key(venue.id) Not Null</td>
      </tr>
          <tr>
        <td>created_timestamp</td>
        <td>String</td>
        <td>Not Null</td>
      </tr>
      <tr>
        <td>updated_timestamp</td>
        <td>String</td>
        <td>Not Null</td>
      </tr> 
    </tbody>
    </table>

    <h3> Error Codes </h3> 
    <table>
      <thead>
        <th>Resource</th>
        <th>Error Code</th>
        <th>Message</th>
      </thead>
      <tbody>
      <tr>
        <td>User</td>
        <td>USER001</td>
        <td>User Name is not registered</td>
      </tr>
      <tr>
        <td>User</td>
        <td>USER002</td>
        <td>User Name already registered</td>
      </tr>
      <tr>
        <td>Venue</td>
        <td>Venue001</td>
        <td>Venue does not exist</td>
      </tr>
      <tr>
        <td>Show</td>
        <td>Show001</td>
        <td>Show does not exist</td>
      </tr>
    </tbody>
    </table>

  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000/
paths:
  /api/user:
    description: Endpoint to get all users details and create new users
    get:
      description: Operation to Read all Users data
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: John Smith
                    username:
                        type: string
                        example: john
                    password:
                      type: string
                      example: xxxxxxxxxxx
                    role:
                      type: string
                      example: user
                    profile_image:
                      type: string
                      example: default.jpg
                    created_timestamp:
                      type: string
                      example: Tue, 28 Mar 2023 12:10:14 -0000
                    updated_timestamp:
                      type: string
                      example: Tue, 28 Mar 2023 12:10:14 -0000
        '500':
          description: Internal Server Error
        '404':
          description: User not found

    post:
      description: Create user profile.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John
                username:
                  type: string
                  example: john
                password:
                  type: string
                  example: password

      responses:
        '201':
          description: Profile Successfuly created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: John
                  username:
                    type: string
                    example: john
                  password:
                    type: string
                    example: XXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                  role:
                    type: string
                    example: user
                  profile_image:
                    type: string
                    example: default.jpg
                  created_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
                  updated_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
                  
        '404':
          description: User not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string

  /api/user/{username}:
    description: End point for User CRUD
    get:
      description: Operation to Read User data
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
            example: john
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                title: course object
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: John Smith
                  username:
                    type: string
                    example: john
                  password:
                    type: string
                    example: xxxxxxxxxxx
                  role:
                    type: string
                    example: user
                  profile_image:
                    type: string
                    example: default.jpg
                  created_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
                  updated_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
        '500':
          description: Internal Server Error
        '404':
          description: User not found

    put:
      description: Operation to update the user profile.
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
            example: john
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Profile Successfuly updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: John
                  username:
                    type: string
                    example: john
                  password:
                    type: string
                    example: XXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                  role:
                    type: string
                    example: user
                  created_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
                  updated_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
        '404':
          description: User not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      description: Operation to delete the course resource
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
            example: john
      responses:
        '200':
          description: Successfully Deleted
        '404':
          description: User not found
        '500':
          description: Intenal Server Error

    
  /api/venue:
    description: Endpoint to get all venue details and create new venue
    get:
      description: Operation to get all Venue details
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: forum
                    place:
                      type: string
                      example: whitefield
                    venue_img:
                      type: string
                      example: 1.jpg
                    created_timestamp:
                      type: string
                      example: Tue, 28 Mar 2023 12:10:14 -0000
                    updated_timestamp:
                      type: string
                      example: Tue, 28 Mar 2023 12:10:14 -0000
        '500':
          description: Internal Server Error
            
    post:
      description: Create new venue
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: forum
                place:
                  type: string
                  example: whitefield
      responses:
        '201':
          description: Venue Successfully Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: forum
                  place:
                    type: string
                    example: whitefield
                  venue_img:
                    type: string
                    example: 2.jpg
                  created_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
                  updated_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
        '403':
          description: Venue already exists
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
  /api/venue/{venue_id}:
    description: Endpoint to Read, Update and Delete a Venue
    get:
      description: Get details of a Venue
      parameters:
        - in: path
          name: venue_id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                title: venue object
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Forum
                  place:
                    type: string
                    example: Whitefield
                  venue_img:
                    type: string
                    example: 2.jpg
                  created_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
                  updated_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
        '500':
          description: Internal server error
        '404':
          description: Venue not found

    put:
      description: Operation to update a given Venue
      parameters:
        - in: path
          name: venue_id
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Forum
                place:
                  type: string
                  example: Whitefield
      responses:
        '200':
          description: Venue Successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Forum
                  place:
                    type: string
                    example: Whitefield
                  venue_img:
                    type: string
                    example: 2.jpg
                  created_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
                  updated_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
        '404':
          description: Venue not found
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
    delete:
      description: Operation to delete the course resource
      parameters:
        - in: path
          name: venue_id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Venue Successfully Deleted
        '500':
          description: Internal Server Error
        '404':
          description: Venue not found

  /api/{venue_id}/show:
    description: URL to create student resource and get all student details
    get:
      description: Get all show details
      parameters:
        - in: path
          name: venue_id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: Avatar
                    language:
                      type: string
                      example: English
                    duration:
                      type: integer
                      example: 180
                    price:
                      type: integer
                      example: 200
                    rating:
                      type: number
                      example: 4.5
                    show_time:
                      type: string
                      example: 
                    n_rows:
                      type: integer
                      example: 5
                    n_seats:
                      type: integer
                      example: 10
                    show_img:
                      type: string
                      example: default.jpg
                    venue_id:
                      type: integer
                      example: 1
                    created_timestamp:
                      type: string
                      example: Tue, 28 Mar 2023 12:10:14 -0000
                    updated_timestamp:
                      type: string
                      example: Tue, 28 Mar 2023 12:10:14 -0000
        '500':
          description: Internal Server Error

    post:
      description: Create a show
      parameters:
        - in: path
          name: venue_id
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Avatar
                language:
                  type: string
                  example: English
                duration:
                  type: integer
                  example: 180
                price:
                  type: integer
                  example: 200
                rating:
                  type: number
                  example: 4.5
                show_time:
                  type: string
                  example: 
                n_rows:
                  type: integer
                  example: 5
                n_seats:
                  type: integer
                  example: 10
                show_img:
                  type: string
                  example: default.jpg
                venue_id:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Show Successfully Created
          content:
            application/json:
              schema:
                title: student object
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: Avatar
                  language:
                    type: string
                    example: English
                  duration:
                    type: integer
                    example: 180
                  price:
                    type: integer
                    example: 200
                  rating:
                    type: number
                    example: 4.5
                  show_time:
                    type: string
                    example: 
                  n_rows:
                    type: integer
                    example: 5
                  n_seats:
                    type: integer
                    example: 10
                  show_img:
                    type: string
                    example: default.jpg
                  venue_id:
                    type: integer
                    example: 1
                  created_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
                  updated_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
        '403':
          description: Show already exist
        '500':
          description: Internal Server Error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string

  /api/{venue_id}/show/{show_id}:
    description: Endpoint to get the the list of shows,update the show and delete a show based on a given venue
    get:
      description: Method to get show details for a given venue.
      parameters:
        - in: path
          name: venue_id
          required: true
          schema:
            type: integer
            example: 1
        - in: path
          name: show_id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: Avatar
                  language:
                    type: string
                    example: English
                  duration:
                    type: integer
                    example: 180
                  price:
                    type: integer
                    example: 200
                  rating:
                    type: number
                    example: 4.5
                  show_time:
                    type: string
                    example: 
                  n_rows:
                    type: integer
                    example: 5
                  n_seats:
                    type: integer
                    example: 10
                  show_img:
                    type: string
                    example: default.jpg
                  venue_id:
                    type: integer
                    example: 1
                  created_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
                  updated_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
        '400':
          description: Invalid Show Id
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '404':
          description: Show does not exist
        '500':
          description: Internal Server Error

    put:
      description: Method to get show details for a given venue.
      parameters:
        - in: path
          name: venue_id
          required: true
          schema:
            type: integer
            example: 1
        - in: path
          name: show_id
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Avatar
                language:
                  type: string
                  example: English
                duration:
                  type: integer
                  example: 180
                price:
                  type: integer
                  example: 200
                rating:
                  type: number
                  example: 4.5
                show_time:
                  type: string
                  example: 
                n_rows:
                  type: integer
                  example: 5
                n_seats:
                  type: integer
                  example: 10
                venue_id:
                  type: integer
                  example: 1

      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: Avatar
                  language:
                    type: string
                    example: English
                  duration:
                    type: integer
                    example: 180
                  price:
                    type: integer
                    example: 200
                  rating:
                    type: number
                    example: 4.5
                  show_time:
                    type: string
                    example: 
                  n_rows:
                    type: integer
                    example: 5
                  n_seats:
                    type: integer
                    example: 10
                  show_img:
                    type: string
                    example: default.jpg
                  venue_id:
                    type: integer
                    example: 1
                  created_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
                  updated_timestamp:
                    type: string
                    example: Tue, 28 Mar 2023 12:10:14 -0000
        '400':
          description: Invalid Show Id
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                  error_message:
                    type: string
        '404':
          description: Show does not exist
        '500':
          description: Internal Server Error
    
    delete:
      description: Delete a Show of a given venue
      parameters:
        - in: path
          name: venue_id
          required: true
          schema:
            type: integer
            example: 1
        - in: path
          name: show_id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Show Successfully Deleted
        '500':
          description: Internal Server Error
        '404':
          description: Show not found

